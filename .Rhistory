}
for (i in 1:length(ext)) {
unlink(paste0("docs/",(ext[i])),recursive = TRUE) # Remove the cache folders (second)
}
# [ALTERNATIVE:] delete files from /production folder (in case you previously rendered these files)
prod.files <- c(grep("^prod_.*\\_cache$",x = dir(path = "production"),value = T),
grep("^prod_.*\\_files$",x = dir(path = "production"),value = T),
grep("^prod_.*\\.html$" ,x = dir(path = "production"),value = T),
".RData",".Rhistory"
)
for (i in 1:length(prod.files)) {
file.remove(paste0("production/",dir(path="production", pattern=prod.files[i]))) # delete residual files /production folder
unlink(paste0("production/",(prod.files[i])),recursive = TRUE)                   # delete files within the "_cache" and "_files" folders
}
# Display the site --------------------------------------------------------
browseURL(url = "docs/index.html")
knitr::include_graphics('../input/images/generalf.png')
production<- list.files(path = "production",pattern = "prod_")        # a list with the names of the files to copy
file.copy(file.path("production",production), "docs",overwrite = TRUE)# copy data proc and analysis files
ext <- c(grep("^prod_.*\\.rmd$",  x = dir(path = "docs"),value = T), # for .rmd
grep("^prod_.*\\.Rmd$",  x = dir(path = "docs"),value = T), # for .Rmd
grep("_cache",x = dir(path = "docs"),value = T),            # for files within the "_cache" folder
grep("^prod_.*\\_cache$",  x = dir(path = "docs"),value = T), #
grep("^prod_.*\\.R$",    x = dir(path = "docs"),value = T), # for .R
".tex",".log",".RData",".Rhistory")                         # for .tex .log .RData .Rhistory
for (i in 1:length(ext)) {
file.remove(paste0("docs/",dir(path="docs", pattern=ext[i]))) # delete files from /docs folder4
unlink(paste0("docs/",(ext[i])),recursive = TRUE)             # Remove the cache files (first)
}
for (i in 1:length(ext)) {
unlink(paste0("docs/",(ext[i])),recursive = TRUE) # Remove the cache folders (second)
}
# [ALTERNATIVE:] delete files from /production folder (in case you previously rendered these files)
prod.files <- c(grep("^prod_.*\\_cache$",x = dir(path = "production"),value = T),
grep("^prod_.*\\_files$",x = dir(path = "production"),value = T),
grep("^prod_.*\\.html$" ,x = dir(path = "production"),value = T),
".RData",".Rhistory"
)
for (i in 1:length(prod.files)) {
file.remove(paste0("production/",dir(path="production", pattern=prod.files[i]))) # delete residual files /production folder
unlink(paste0("production/",(prod.files[i])),recursive = TRUE)                   # delete files within the "_cache" and "_files" folders
}
production<- list.files(path = "production",pattern = "prod_")        # a list with the names of the files to copy
file.copy(file.path("production",production), "docs",overwrite = TRUE)# copy data proc and analysis files
rmarkdown::render_site("docs",quiet = FALSE) # Render site
rmarkdown::render_site("docs/paper.Rmd", output_format = "all")
rmarkdown::render_site("docs/paper.Rmd", output_format = "all")
rmarkdown::render_site("docs/paper.Rmd", output_format = "all")
rmarkdown::render_site("docs/paper.Rmd", output_format = "all")
knitr::include_graphics('../input/images/generalf.png')
![](../output/images/plotlikert.png)
setwd("C:/Users/Julio/Dropbox/papers/merit-scale")
production<- list.files(path = "production",pattern = "prod_")        # a list with the names of the files to copy
file.copy(file.path("production",production), "docs",overwrite = TRUE)# copy data proc and analysis files
rmarkdown::render_site("docs",quiet = FALSE) # Render site
knitr::include_graphics('../input/images/generalf.png')
rmarkdown::render_site("docs",quiet = FALSE) # Render site
rmarkdown::render_site("docs",quiet = FALSE) # Render site
rmarkdown::render_site("docs",quiet = FALSE) # Render site
knitr::include_graphics('input/images/generalf.png')
rmarkdown::render_site("docs",quiet = FALSE) # Render site
ext <- c(grep("^prod_.*\\.rmd$",  x = dir(path = "docs"),value = T), # for .rmd
grep("^prod_.*\\.Rmd$",  x = dir(path = "docs"),value = T), # for .Rmd
grep("_cache",x = dir(path = "docs"),value = T),            # for files within the "_cache" folder
grep("^prod_.*\\_cache$",  x = dir(path = "docs"),value = T), #
grep("^prod_.*\\.R$",    x = dir(path = "docs"),value = T), # for .R
".tex",".log",".RData",".Rhistory")                         # for .tex .log .RData .Rhistory
for (i in 1:length(ext)) {
file.remove(paste0("docs/",dir(path="docs", pattern=ext[i]))) # delete files from /docs folder4
unlink(paste0("docs/",(ext[i])),recursive = TRUE)             # Remove the cache files (first)
}
for (i in 1:length(ext)) {
unlink(paste0("docs/",(ext[i])),recursive = TRUE) # Remove the cache folders (second)
}
# [ALTERNATIVE:] delete files from /production folder (in case you previously rendered these files)
prod.files <- c(grep("^prod_.*\\_cache$",x = dir(path = "production"),value = T),
grep("^prod_.*\\_files$",x = dir(path = "production"),value = T),
grep("^prod_.*\\.html$" ,x = dir(path = "production"),value = T),
".RData",".Rhistory"
)
for (i in 1:length(prod.files)) {
file.remove(paste0("production/",dir(path="production", pattern=prod.files[i]))) # delete residual files /production folder
unlink(paste0("production/",(prod.files[i])),recursive = TRUE)                   # delete files within the "_cache" and "_files" folders
}
production<- list.files(path = "production",pattern = "prod_")        # a list with the names of the files to copy
file.copy(file.path("production",production), "docs",overwrite = TRUE)# copy data proc and analysis files
rmarkdown::render_site("docs",quiet = FALSE) # Render site
ext <- c(grep("^prod_.*\\.rmd$",  x = dir(path = "docs"),value = T), # for .rmd
grep("^prod_.*\\.Rmd$",  x = dir(path = "docs"),value = T), # for .Rmd
grep("_cache",x = dir(path = "docs"),value = T),            # for files within the "_cache" folder
grep("^prod_.*\\_cache$",  x = dir(path = "docs"),value = T), #
grep("^prod_.*\\.R$",    x = dir(path = "docs"),value = T), # for .R
".tex",".log",".RData",".Rhistory")                         # for .tex .log .RData .Rhistory
for (i in 1:length(ext)) {
file.remove(paste0("docs/",dir(path="docs", pattern=ext[i]))) # delete files from /docs folder4
unlink(paste0("docs/",(ext[i])),recursive = TRUE)             # Remove the cache files (first)
}
for (i in 1:length(ext)) {
unlink(paste0("docs/",(ext[i])),recursive = TRUE) # Remove the cache folders (second)
}
# [ALTERNATIVE:] delete files from /production folder (in case you previously rendered these files)
prod.files <- c(grep("^prod_.*\\_cache$",x = dir(path = "production"),value = T),
grep("^prod_.*\\_files$",x = dir(path = "production"),value = T),
grep("^prod_.*\\.html$" ,x = dir(path = "production"),value = T),
".RData",".Rhistory"
)
for (i in 1:length(prod.files)) {
file.remove(paste0("production/",dir(path="production", pattern=prod.files[i]))) # delete residual files /production folder
unlink(paste0("production/",(prod.files[i])),recursive = TRUE)                   # delete files within the "_cache" and "_files" folders
}
browseURL(url = "docs/index.html")
# before you run this line, check if your R Markdown files have a .rmd or .Rmd extension
# on this case we use both
ext <- c(grep("^prod_.*\\.rmd$",  x = dir(path = "docs"),value = T), # for .rmd
grep("^prod_.*\\.Rmd$",  x = dir(path = "docs"),value = T), # for .Rmd
grep("_cache",x = dir(path = "docs"),value = T),            # for files within the "_cache" folder
grep("^prod_.*\\_cache$",  x = dir(path = "docs"),value = T), #
grep("^prod_.*\\.R$",    x = dir(path = "docs"),value = T), # for .R
".tex",".log",".RData",".Rhistory")                         # for .tex .log .RData .Rhistory
for (i in 1:length(ext)) {
file.remove(paste0("docs/",dir(path="docs", pattern=ext[i]))) # delete files from /docs folder4
unlink(paste0("docs/",(ext[i])),recursive = TRUE)             # Remove the cache files (first)
}
for (i in 1:length(ext)) {
unlink(paste0("docs/",(ext[i])),recursive = TRUE) # Remove the cache folders (second)
}
# [ALTERNATIVE:] delete files from /production folder (in case you previously rendered these files)
prod.files <- c(grep("^prod_.*\\_cache$",x = dir(path = "production"),value = T),
grep("^prod_.*\\_files$",x = dir(path = "production"),value = T),
grep("^prod_.*\\.html$" ,x = dir(path = "production"),value = T),
".RData",".Rhistory"
)
for (i in 1:length(prod.files)) {
file.remove(paste0("production/",dir(path="production", pattern=prod.files[i]))) # delete residual files /production folder
unlink(paste0("production/",(prod.files[i])),recursive = TRUE)                   # delete files within the "_cache" and "_files" folders
}
production<- list.files(path = "production",pattern = "prod_")        # a list with the names of the files to copy
file.copy(file.path("production",production), "docs",overwrite = TRUE)# copy data proc and analysis files
rmarkdown::render_site("docs",quiet = FALSE) # Render site
knitr::opts_chunk$set(fig.path = "../output")
knitr::opts_chunk$set(fig.path = "../")
knitr::opts_chunk$set(fig.path = "../")
production<- list.files(path = "production",pattern = "prod_")        # a list with the names of the files to copy
file.copy(file.path("production",production), "docs",overwrite = TRUE)# copy data proc and analysis files
rmarkdown::render_site("docs",quiet = FALSE) # Render site
production<- list.files(path = "production",pattern = "prod_")        # a list with the names of the files to copy
file.copy(file.path("production",production), "docs",overwrite = TRUE)# copy data proc and analysis files
rmarkdown::render_site("docs",quiet = FALSE) # Render site
knitr::include_graphics('input/images/app_mod.png')
production<- list.files(path = "production",pattern = "prod_")        # a list with the names of the files to copy
file.copy(file.path("production",production), "docs",overwrite = TRUE)# copy data proc and analysis files
rmarkdown::render_site("docs",quiet = FALSE) # Render site
knitr::include_graphics('input/images/app_mod.png')
source('C:/Users/Julio/Dropbox/papers/merit-scale/render-site.R')
source('C:/Users/Julio/Dropbox/papers/merit-scale/render-site.R')
rmarkdown::render_site("docs/paper.Rmd", output_format = "all")
rmarkdown::render("docs/paper.Rmd", output_format = "all")
rmarkdown::render("docs/paper.Rmd", output_format = "bookddown::pdf_document2")
rmarkdown::render("docs/paper.Rmd", output_format = "bookdown::pdf_document2")
for (i in 1:length(ext)) {
file.remove(paste0("docs/",dir(path="docs", pattern=ext[i]))) # delete files from /docs folder4
unlink(paste0("docs/",(ext[i])),recursive = TRUE)             # Remove the cache files (first)
}
for (i in 1:length(ext)) {
unlink(paste0("docs/",(ext[i])),recursive = TRUE) # Remove the cache folders (second)
}
# [ALTERNATIVE:] delete files from /production folder (in case you previously rendered these files)
prod.files <- c(grep("^prod_.*\\_cache$",x = dir(path = "production"),value = T),
grep("^prod_.*\\_files$",x = dir(path = "production"),value = T),
grep("^prod_.*\\.html$" ,x = dir(path = "production"),value = T),
".RData",".Rhistory"
)
for (i in 1:length(prod.files)) {
file.remove(paste0("production/",dir(path="production", pattern=prod.files[i]))) # delete residual files /production folder
unlink(paste0("production/",(prod.files[i])),recursive = TRUE)                   # delete files within the "_cache" and "_files" folders
}
rmarkdown::render("docs/paper.Rmd", output_format = "bookdown::pdf_document2")
rmarkdown::render("docs/paper.Rmd", output_format = "bookdown::pdf_document2")
rmarkdown::render("docs/paper.Rmd", output_format = "bookdown::pdf_document2")
rmarkdown::render("docs/paper.Rmd", output_format = "bookdown::pdf_document2")
rmarkdown::render("docs/paper.Rmd", output_format = "bookdown::pdf_document2")
rmarkdown::render("docs/paper.Rmd", output_format = "pdf_document")
rmarkdown::render("docs/paper.Rmd", output_format = "pdf_document")
rmarkdown::render("docs/paper.Rmd", output_format = "pdf_document")
rmarkdown::render("docs/paper.Rmd", output_format = "pdf_document")
rmarkdown::render("docs/paper.Rmd", output_format = "pdf_document2")
rmarkdown::render("docs/paper.Rmd", output_format = "bookdown::pdf_document2")
rmarkdown::render("docs/paper.Rmd", output_format = "bookdown::pdf_document2")
rmarkdown::render("paper.Rmd", output_format = "bookdown::pdf_document2")
rmarkdown::render("docs/paper.Rmd", output_format = "bookdown::pdf_document2")
rmarkdown::render("docs/paper.Rmd", output_format = "bookdown::pdf_document2")
knitr::include_graphics('../input/images/generalf.png')
setwd("C:/Users/Julio/Dropbox/papers/merit-scale/docs")
knitr::include_graphics('../input/images/generalf.png')
rmarkdown::render("docs/paper.Rmd", output_format = "bookdown::pdf_document2")
rmarkdown::render("paper.Rmd", output_format = "bookdown::pdf_document2")
rmarkdown::render("paper.Rmd", output_format = "bookdown::pdf_document2")
rmarkdown::render("paper.Rmd", output_format = "bookdown::pdf_document2")
rmarkdown::render_site("docs/paper.Rmd", output_format = "all")
setwd("C:/Users/Julio/Dropbox/papers/merit-scale")
rmarkdown::render_site("docs/paper.Rmd", output_format = "all")
rmarkdown::render_site("docs/paper.Rmd", output_format = "all")
rmarkdown::render("docs/paper.Rmd", output_format = "all")
# Chunk 1
# for render in pdf run rmarkdown::render_site("docs/paper.Rmd", output_format = "all")
# clean #in the yml
# Chunk 2: setup
knitr::opts_chunk$set(warning = FALSE,message = FALSE, cache = FALSE)
knitr::opts_knit$set(base.url = "../") #relative path for .html output file
knitr::opts_knit$set(root.dir = "../") #relative path for chunks within .rmd files
options(scipen=999)
rm(list=ls())
options(knitr.kable.NA = '')
options(knitr.graphics.error = FALSE)
Sys.setlocale("LC_ALL", "ES_ES.UTF-8")
# Chunk 3
pacman::p_load(knitr,kableExtra, dplyr)
# Chunk 4
table_format = if(is_html_output()) {
"html"
} else if(is_latex_output()) {
"latex"
}
table_format2 = if(is_html_output()) {
T
} else if(is_latex_output()) {
F
}
knitr::include_graphics("input/images/generalf.png")
knitr::include_graphics("input/images/generalf.png")
rmarkdown::render("docs/paper.Rmd", output_format = "pdf_document")
rmarkdown::render("docs/paper.Rmd", output_format = "all")
knitr::include_graphics2("input/images/generalf.png")
knitr::include_graphics("input/images/generalf.png")
rmarkdown::render("docs/paper.Rmd", output_format = "pdf_document")
knitr::include_graphics("input/images/generalf.png")
rmarkdown::relative_to(dir = ".")
rmarkdown::relative_to(dir = ".","generalf.png")
rmarkdown::relative_to("generalf.png")
rmarkdown::render("docs/paper.Rmd", output_format = "pdf_document")
?knitr::opts_knit$set(base.dir = )
?knitr::opts_knit$set()
?knitr::opts_knit()
?knitr::opts_knit()
knitr::opt_chunk$set(fig.path="../")
knitr::opts_chunk$set(warning = FALSE,message = FALSE, cache = FALSE)
knitr::opts_knit$set(base.url = "../") #relative path for .html output file
knitr::opts_knit$set(root.dir = "../") #relative path for chunks within .rmd files
knitr::opt_chunk$set(fig.path="../")
knitr::opts_chunk$set(warning = FALSE,message = FALSE, cache = FALSE)
knitr::opts_chunk$set(fig.path = "../")
rmarkdown::render("docs/paper.Rmd", output_format = "pdf_document")
knitr::opts_knit$get("base.url")
knitr::opts_chunk$get("fig.path")
knitr::opts_chunk$set(warning = FALSE,message = FALSE, cache = FALSE)
knitr::opts_knit$set(base.url = "../") #relative path for .html output file
knitr::opts_knit$set(root.dir = "../") #relative path for chunks within .rmd files
options(scipen=999)
rm(list=ls())
options(knitr.kable.NA = '')
options(knitr.graphics.error = FALSE)
Sys.setlocale("LC_ALL", "ES_ES.UTF-8")
options(knitr.graphics.error = FALSE)
Sys.setlocale("LC_ALL", "ES_ES.UTF-8")
knitr::include_graphics(path = "../input/images/tabla2.png")
knitr::include_graphics(path = "../input/images/generalf.png")
knitr::include_graphics("../input/images/generalf.png")
knitr::opts_chunk$set(warning = FALSE,message = FALSE, cache = FALSE)
knitr::opts_knit$set(base.url = "../") #relative path for .html output file
# knitr::opts_knit$set(root.dir = "../") #relative path for chunks within .rmd files
options(scipen=999)
rm(list=ls())
options(knitr.kable.NA = '')
options(knitr.graphics.error = FALSE)
Sys.setlocale("LC_ALL", "ES_ES.UTF-8")
knitr::include_graphics("../input/images/generalf.png")
knitr::include_graphics("../input/images/generalf.png")
# before you run this line, check if your R Markdown files have a .rmd or .Rmd extension
# on this case we use both
ext <- c(grep("^prod_.*\\.rmd$",  x = dir(path = "docs"),value = T), # for .rmd
grep("^prod_.*\\.Rmd$",  x = dir(path = "docs"),value = T), # for .Rmd
grep("_cache",x = dir(path = "docs"),value = T),            # for files within the "_cache" folder
grep("^prod_.*\\_cache$",  x = dir(path = "docs"),value = T), #
grep("^prod_.*\\.R$",    x = dir(path = "docs"),value = T), # for .R
".tex",".log",".RData",".Rhistory")                         # for .tex .log .RData .Rhistory
for (i in 1:length(ext)) {
file.remove(paste0("docs/",dir(path="docs", pattern=ext[i]))) # delete files from /docs folder4
unlink(paste0("docs/",(ext[i])),recursive = TRUE)             # Remove the cache files (first)
}
for (i in 1:length(ext)) {
unlink(paste0("docs/",(ext[i])),recursive = TRUE) # Remove the cache folders (second)
}
# [ALTERNATIVE:] delete files from /production folder (in case you previously rendered these files)
prod.files <- c(grep("^prod_.*\\_cache$",x = dir(path = "production"),value = T),
grep("^prod_.*\\_files$",x = dir(path = "production"),value = T),
grep("^prod_.*\\.html$" ,x = dir(path = "production"),value = T),
".RData",".Rhistory"
)
for (i in 1:length(prod.files)) {
file.remove(paste0("production/",dir(path="production", pattern=prod.files[i]))) # delete residual files /production folder
unlink(paste0("production/",(prod.files[i])),recursive = TRUE)                   # delete files within the "_cache" and "_files" folders
}
production<- list.files(path = "production",pattern = "prod_")        # a list with the names of the files to copy
file.copy(file.path("production",production), "docs",overwrite = TRUE)# copy data proc and analysis files
rmarkdown::render_site("docs",quiet = FALSE) # Render site
ext <- c(grep("^prod_.*\\.rmd$",  x = dir(path = "docs"),value = T), # for .rmd
grep("^prod_.*\\.Rmd$",  x = dir(path = "docs"),value = T), # for .Rmd
grep("_cache",x = dir(path = "docs"),value = T),            # for files within the "_cache" folder
grep("^prod_.*\\_cache$",  x = dir(path = "docs"),value = T), #
grep("^prod_.*\\.R$",    x = dir(path = "docs"),value = T), # for .R
".tex",".log",".RData",".Rhistory")                         # for .tex .log .RData .Rhistory
for (i in 1:length(ext)) {
file.remove(paste0("docs/",dir(path="docs", pattern=ext[i]))) # delete files from /docs folder4
unlink(paste0("docs/",(ext[i])),recursive = TRUE)             # Remove the cache files (first)
}
for (i in 1:length(ext)) {
unlink(paste0("docs/",(ext[i])),recursive = TRUE) # Remove the cache folders (second)
}
# [ALTERNATIVE:] delete files from /production folder (in case you previously rendered these files)
prod.files <- c(grep("^prod_.*\\_cache$",x = dir(path = "production"),value = T),
grep("^prod_.*\\_files$",x = dir(path = "production"),value = T),
grep("^prod_.*\\.html$" ,x = dir(path = "production"),value = T),
".RData",".Rhistory"
)
for (i in 1:length(prod.files)) {
file.remove(paste0("production/",dir(path="production", pattern=prod.files[i]))) # delete residual files /production folder
unlink(paste0("production/",(prod.files[i])),recursive = TRUE)                   # delete files within the "_cache" and "_files" folders
}
production<- list.files(path = "production",pattern = "prod_")        # a list with the names of the files to copy
file.copy(file.path("production",production), "docs",overwrite = TRUE)# copy data proc and analysis files
rmarkdown::render_site("docs",quiet = FALSE) # Render site
production<- list.files(path = "production",pattern = "prod_")        # a list with the names of the files to copy
file.copy(file.path("production",production), "docs",overwrite = TRUE)# copy data proc and analysis files
ext <- c(grep("^prod_.*\\.rmd$",  x = dir(path = "docs"),value = T), # for .rmd
grep("^prod_.*\\.Rmd$",  x = dir(path = "docs"),value = T), # for .Rmd
grep("_cache",x = dir(path = "docs"),value = T),            # for files within the "_cache" folder
grep("^prod_.*\\_cache$",  x = dir(path = "docs"),value = T), #
grep("^prod_.*\\.R$",    x = dir(path = "docs"),value = T), # for .R
".tex",".log",".RData",".Rhistory")                         # for .tex .log .RData .Rhistory
for (i in 1:length(ext)) {
file.remove(paste0("docs/",dir(path="docs", pattern=ext[i]))) # delete files from /docs folder4
unlink(paste0("docs/",(ext[i])),recursive = TRUE)             # Remove the cache files (first)
}
for (i in 1:length(ext)) {
unlink(paste0("docs/",(ext[i])),recursive = TRUE) # Remove the cache folders (second)
}
# [ALTERNATIVE:] delete files from /production folder (in case you previously rendered these files)
prod.files <- c(grep("^prod_.*\\_cache$",x = dir(path = "production"),value = T),
grep("^prod_.*\\_files$",x = dir(path = "production"),value = T),
grep("^prod_.*\\.html$" ,x = dir(path = "production"),value = T),
".RData",".Rhistory"
)
for (i in 1:length(prod.files)) {
file.remove(paste0("production/",dir(path="production", pattern=prod.files[i]))) # delete residual files /production folder
unlink(paste0("production/",(prod.files[i])),recursive = TRUE)                   # delete files within the "_cache" and "_files" folders
}
production<- list.files(path = "production",pattern = "prod_")        # a list with the names of the files to copy
file.copy(file.path("production",production), "docs",overwrite = TRUE)# copy data proc and analysis files
rmarkdown::render_site("docs",quiet = FALSE) # Render site
ext <- c(grep("^prod_.*\\.rmd$",  x = dir(path = "docs"),value = T), # for .rmd
grep("^prod_.*\\.Rmd$",  x = dir(path = "docs"),value = T), # for .Rmd
grep("_cache",x = dir(path = "docs"),value = T),            # for files within the "_cache" folder
grep("^prod_.*\\_cache$",  x = dir(path = "docs"),value = T), #
grep("^prod_.*\\.R$",    x = dir(path = "docs"),value = T), # for .R
".tex",".log",".RData",".Rhistory")                         # for .tex .log .RData .Rhistory
for (i in 1:length(ext)) {
file.remove(paste0("docs/",dir(path="docs", pattern=ext[i]))) # delete files from /docs folder4
unlink(paste0("docs/",(ext[i])),recursive = TRUE)             # Remove the cache files (first)
}
for (i in 1:length(ext)) {
unlink(paste0("docs/",(ext[i])),recursive = TRUE) # Remove the cache folders (second)
}
# [ALTERNATIVE:] delete files from /production folder (in case you previously rendered these files)
prod.files <- c(grep("^prod_.*\\_cache$",x = dir(path = "production"),value = T),
grep("^prod_.*\\_files$",x = dir(path = "production"),value = T),
grep("^prod_.*\\.html$" ,x = dir(path = "production"),value = T),
".RData",".Rhistory"
)
for (i in 1:length(prod.files)) {
file.remove(paste0("production/",dir(path="production", pattern=prod.files[i]))) # delete residual files /production folder
unlink(paste0("production/",(prod.files[i])),recursive = TRUE)                   # delete files within the "_cache" and "_files" folders
}
production<- list.files(path = "production",pattern = "prod_")        # a list with the names of the files to copy
file.copy(file.path("production",production), "docs",overwrite = TRUE)# copy data proc and analysis files
rmarkdown::render_site("docs",quiet = FALSE) # Render site
source('C:/Users/Julio/Dropbox/papers/merit-scale/render-site.R')
# knitr::opts_knit$set(root.dir = "../") #relative path for chunks within .rmd files
knitr::include_graphics(path = "../input/images/generalf.png")
# knitr::opts_knit$set(root.dir = "../") #relative path for chunks within .rmd files
# before you run this line, check if your R Markdown files have a .rmd or .Rmd extension
# on this case we use both
ext <- c(grep("^prod_.*\\.rmd$",  x = dir(path = "docs"),value = T), # for .rmd
grep("^prod_.*\\.Rmd$",  x = dir(path = "docs"),value = T), # for .Rmd
grep("_cache",x = dir(path = "docs"),value = T),            # for files within the "_cache" folder
grep("^prod_.*\\_cache$",  x = dir(path = "docs"),value = T), #
grep("^prod_.*\\.R$",    x = dir(path = "docs"),value = T), # for .R
".tex",".log",".RData",".Rhistory")                         # for .tex .log .RData .Rhistory
for (i in 1:length(ext)) {
file.remove(paste0("docs/",dir(path="docs", pattern=ext[i]))) # delete files from /docs folder4
unlink(paste0("docs/",(ext[i])),recursive = TRUE)             # Remove the cache files (first)
}
for (i in 1:length(ext)) {
unlink(paste0("docs/",(ext[i])),recursive = TRUE) # Remove the cache folders (second)
}
# [ALTERNATIVE:] delete files from /production folder (in case you previously rendered these files)
prod.files <- c(grep("^prod_.*\\_cache$",x = dir(path = "production"),value = T),
grep("^prod_.*\\_files$",x = dir(path = "production"),value = T),
grep("^prod_.*\\.html$" ,x = dir(path = "production"),value = T),
".RData",".Rhistory"
)
for (i in 1:length(prod.files)) {
file.remove(paste0("production/",dir(path="production", pattern=prod.files[i]))) # delete residual files /production folder
unlink(paste0("production/",(prod.files[i])),recursive = TRUE)                   # delete files within the "_cache" and "_files" folders
}
# Display the site --------------------------------------------------------
# before you run this line, check if your R Markdown files have a .rmd or .Rmd extension
# on this case we use both
ext <- c(grep("^prod_.*\\.rmd$",  x = dir(path = "docs"),value = T), # for .rmd
grep("^prod_.*\\.Rmd$",  x = dir(path = "docs"),value = T), # for .Rmd
grep("_cache",x = dir(path = "docs"),value = T),            # for files within the "_cache" folder
grep("^prod_.*\\_cache$",  x = dir(path = "docs"),value = T), #
grep("^prod_.*\\.R$",    x = dir(path = "docs"),value = T), # for .R
".tex",".log",".RData",".Rhistory")                         # for .tex .log .RData .Rhistory
for (i in 1:length(ext)) {
file.remove(paste0("docs/",dir(path="docs", pattern=ext[i]))) # delete files from /docs folder4
unlink(paste0("docs/",(ext[i])),recursive = TRUE)             # Remove the cache files (first)
}
for (i in 1:length(ext)) {
unlink(paste0("docs/",(ext[i])),recursive = TRUE) # Remove the cache folders (second)
}
# [ALTERNATIVE:] delete files from /production folder (in case you previously rendered these files)
prod.files <- c(grep("^prod_.*\\_cache$",x = dir(path = "production"),value = T),
grep("^prod_.*\\_files$",x = dir(path = "production"),value = T),
grep("^prod_.*\\.html$" ,x = dir(path = "production"),value = T),
".RData",".Rhistory"
)
for (i in 1:length(prod.files)) {
file.remove(paste0("production/",dir(path="production", pattern=prod.files[i]))) # delete residual files /production folder
unlink(paste0("production/",(prod.files[i])),recursive = TRUE)                   # delete files within the "_cache" and "_files" folders
}
# Display the site --------------------------------------------------------
source('C:/Users/Julio/Dropbox/papers/merit-scale/render-site.R')
rmarkdown::render_site("docs/paper.Rmd", output_format = "all")
rmarkdown::render_site("docs/paper.Rmd", output_format = "bookdown::pdf_document2")
# before you run this line, check if your R Markdown files have a .rmd or .Rmd extension
# on this case we use both
ext <- c(grep("^prod_.*\\.rmd$",  x = dir(path = "docs"),value = T), # for .rmd
grep("^prod_.*\\.Rmd$",  x = dir(path = "docs"),value = T), # for .Rmd
grep("_cache",x = dir(path = "docs"),value = T),            # for files within the "_cache" folder
grep("^prod_.*\\_cache$",  x = dir(path = "docs"),value = T), #
grep("^prod_.*\\.R$",    x = dir(path = "docs"),value = T), # for .R
".tex",".log",".RData",".Rhistory")                         # for .tex .log .RData .Rhistory
for (i in 1:length(ext)) {
file.remove(paste0("docs/",dir(path="docs", pattern=ext[i]))) # delete files from /docs folder4
unlink(paste0("docs/",(ext[i])),recursive = TRUE)             # Remove the cache files (first)
}
for (i in 1:length(ext)) {
unlink(paste0("docs/",(ext[i])),recursive = TRUE) # Remove the cache folders (second)
}
# [ALTERNATIVE:] delete files from /production folder (in case you previously rendered these files)
prod.files <- c(grep("^prod_.*\\_cache$",x = dir(path = "production"),value = T),
grep("^prod_.*\\_files$",x = dir(path = "production"),value = T),
grep("^prod_.*\\.html$" ,x = dir(path = "production"),value = T),
".RData",".Rhistory"
)
for (i in 1:length(prod.files)) {
file.remove(paste0("production/",dir(path="production", pattern=prod.files[i]))) # delete residual files /production folder
unlink(paste0("production/",(prod.files[i])),recursive = TRUE)                   # delete files within the "_cache" and "_files" folders
}
rmarkdown::render|("docs/paper.Rmd", output_format = "all")
rmarkdown::render("docs/paper.Rmd", output_format = "all")
rmarkdown::render("docs/paper.Rmd", output_format = "all")
rmarkdown::render("docs/paper.Rmd", output_format = "all")
rmarkdown::render("docs/paper.Rmd", output_format = "all")
rmarkdown::render("docs/paper.Rmd", output_format = "all")
cap <- "Descriptive statistics of the scale."
load(file = "../input/data/proc/dat04.RData")
dat04b<- dat04 %>% rename("A.Perception Effort" =perc_effort,
"B.Perception Talent" = perc_talent,
"C.Perception rich parents" = perc_wpart,
"D.Perception contacts" = perc_netw,
"E.Preferences Effort" = pref_effort,
"F.Preferences Talent" =  pref_talent,
"G.Preferences rich parents" =  pref_wpart ,
"H.Preferences contacts" = pref_netw  )
sum04b  <- psych::describe(dat04b[,-c(1)], fast = T) %>% select(mean,sd,min,max) %>% data.frame() %>% round(digits = 2)
table04b<- sum04b %>% rename("Mean"=mean, "SD"=sd, "Min"=min,"Max"=max)
sumdat04<- kable(table04b,format =table_format, booktabs= T, escape = FALSE,align = "l",linesep = "", caption = cap
) %>% kable_styling(full_width = table_format2, font_size = 14,position = "center",latex_options = c("hold_position","scale_down"));sumdat04
cap <- "Descriptive statistics of the scale."
load(file = "../input/data/proc/dat04.RData")
dat04b<- dat04 %>% rename("A.Perception Effort" =perc_effort,
"B.Perception Talent" = perc_talent,
"C.Perception rich parents" = perc_wpart,
"D.Perception contacts" = perc_netw,
"E.Preferences Effort" = pref_effort,
"F.Preferences Talent" =  pref_talent,
"G.Preferences rich parents" =  pref_wpart ,
"H.Preferences contacts" = pref_netw  )
sum04b  <- psych::describe(dat04b[,-c(1)], fast = T) %>% select(mean,sd,min,max) %>% data.frame() %>% round(digits = 2)
table04b<- sum04b %>% rename("Mean"=mean, "SD"=sd, "Min"=min,"Max"=max)
sumdat04<- kable(table04b,format =table_format, booktabs= T, escape = FALSE,align = "l",linesep = "", caption = cap
) %>% kable_styling(full_width = table_format2, font_size = 14,position = "center",latex_options = c("hold_position","scale_down"));sumdat04
rmarkdown::render("docs/paper.Rmd", output_format = "all")
rmarkdown::render("docs/paper.Rmd", output_format = "all")
rmarkdown::render("docs/paper.Rmd", output_format = "all")
rmarkdown::render("docs/paper.Rmd", output_format = "all")
rmarkdown::render("docs/paper.Rmd", output_format = "all")
rmarkdown::render("docs/paper.Rmd", output_format = "all")
rmarkdown::render("docs/paper.Rmd", output_format = "all")
rmarkdown::render("docs/paper.Rmd", output_format = "all")
rmarkdown::render("docs/paper.Rmd", output_format = "all")
