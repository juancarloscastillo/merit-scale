w01 <- sjlabelled::read_spss("input/data/original/Estudio_3_ola1.sav",verbose = F)
```{r eval=FALSE, include=FALSE}
rmarkdown::render(input = "production/prep-data-A.Rmd",output_format = "html_document",output_dir = ".")
```
rmarkdown::render(input = "production/prep-data-A.Rmd",output_format = "html_document",output_dir = ".")
rmarkdown::render(input = "production/prep-data-A.Rmd",output_format = "html_document",output_dir = ".")
w01 <- sjlabelled::read_spss("input/data/original/Estudio_3_ola1.sav",verbose = F)
rmarkdown::render(input = "production/prep-data-A.Rmd",output_format = "html_document",output_dir = ".")
knitr::opts_chunk$set(warning = FALSE,message = FALSE, cache = FALSE,results = "hold")
knitr::opts_knit$set(root.dir = "../")
options(scipen=999)
rm(list=ls())
options(knitr.kable.NA = '')
library(sjPlot)
library(dplyr)
library(tidyr)
library(lavaan)
library(stargazer)
library(corrplot)
library(psych)
library(knitr)
library(kableExtra)
rmarkdown::render(input = "production/prep-data-A.Rmd",output_format = "html_document",output_dir = ".")
library(summarytools)
w01 <- sjlabelled::read_spss("input/data/original/Estudio_3_ola1.sav",verbose = F)
rmarkdown::render(input = "production/prod_analysis-long_invariance.Rmd",output_format = "html_document"); browseURL(url = "production/prod_analysis-long_invariance.html")
setwd("C:/Users/Julio/Dropbox/papers/merit-scale")
rmarkdown::render(input = "production/prod_analysis-long_invariance.Rmd",output_format = "html_document"); browseURL(url = "production/prod_analysis-long_invariance.html")
production<- list.files(path = "production",pattern = "prod_")        # a list with the names of the files to copy
file.copy(file.path("production",production), "docs",overwrite = TRUE)# copy data proc and analysis files
rmarkdown::render_site("docs") # Render site
production<- list.files(path = "production",pattern = "prod_")        # a list with the names of the files to copy
file.copy(file.path("production",production), "docs",overwrite = TRUE)# copy data proc and analysis files
rmarkdown::render_site("docs") # Render site
rmarkdown::render(input = "production/prod_analysis-cfa.Rmd",output_format = "html_document"); browseURL(url = "production/prod_analysis-cfa.html")
rmarkdown::render(input = "production/prod_prep-data-A.Rmd",output_format = "html_document",output_dir = "production/");browseURL(url = "production/prod_prep-data-A.html")
rmarkdown::clean_site()
setwd("C:/Users/Julio/Dropbox/papers/merit-scale/docs")
rmarkdown::clean_site()
# Render site ------------------------------------------------------------
###### logic
# there are some limitations for rendering websites in Rmarkdown/Githubpages
# as all files should be in a same directory, which goes against the logic
# of a clean and organized folder structure. Therefore, this script:
# 1. bring all necessary files to the "docs" folder, where the site files are hosted
# 2. renders the site from this location (docs folder)
# 3. delete the Rmd files that where brought in step 1, leaving only the html files
# INSTRUCTIONS-------------------------:
# 1. set your root dir at "merit-scale"
# 2. Run this code.
production<- list.files(path = "production",pattern = "prod_")        # a list with the names of the files to copy
file.copy(file.path("production",production), "docs",overwrite = TRUE)# copy data proc and analysis files
rmarkdown::render_site("docs") # Render site
# before you run this line, check if your R Markdown files have a .rmd or .Rmd extension
# on this case we use both
ext <- c(grep("^prod_.*\\.rmd$",x = dir(path = "docs"),value = T), # for .rmd
grep("^prod_.*\\.Rmd$",x = dir(path = "docs"),value = T), # for .Rmd
".tex",".log")                                            # for .tex and .log
for (i in 1:length(ext)) {
file.remove(paste0("docs/",dir(path="docs", pattern=ext[i]))) # delete files
}
browseURL(url = "docs/index.html")
# Keep only the original .rmd files (site), configuration (_site.yml and _config.yml)
# and prod_ folders (cache and files)
# rmarkdown::clean_site("docs")
setwd("C:/Users/Julio/Dropbox/papers/merit-scale")
# Render site ------------------------------------------------------------
###### logic
# there are some limitations for rendering websites in Rmarkdown/Githubpages
# as all files should be in a same directory, which goes against the logic
# of a clean and organized folder structure. Therefore, this script:
# 1. bring all necessary files to the "docs" folder, where the site files are hosted
# 2. renders the site from this location (docs folder)
# 3. delete the Rmd files that where brought in step 1, leaving only the html files
# INSTRUCTIONS-------------------------:
# 1. set your root dir at "merit-scale"
# 2. Run this code.
production<- list.files(path = "production",pattern = "prod_")        # a list with the names of the files to copy
file.copy(file.path("production",production), "docs",overwrite = TRUE)# copy data proc and analysis files
rmarkdown::render_site("docs") # Render site
# before you run this line, check if your R Markdown files have a .rmd or .Rmd extension
# on this case we use both
ext <- c(grep("^prod_.*\\.rmd$",x = dir(path = "docs"),value = T), # for .rmd
grep("^prod_.*\\.Rmd$",x = dir(path = "docs"),value = T), # for .Rmd
".tex",".log")                                            # for .tex and .log
for (i in 1:length(ext)) {
file.remove(paste0("docs/",dir(path="docs", pattern=ext[i]))) # delete files
}
browseURL(url = "docs/index.html")
# Keep only the original .rmd files (site), configuration (_site.yml and _config.yml)
# and prod_ folders (cache and files)
# rmarkdown::clean_site("docs")
rmarkdown::clean_site("docs")
rmarkdown::clean_site("docs")
production<- list.files(path = "production",pattern = "prod_")        # a list with the names of the files to copy
file.copy(file.path("production",production), "docs",overwrite = TRUE)# copy data proc and analysis files
rmarkdown::render_site("docs") # Render site
# before you run this line, check if your R Markdown files have a .rmd or .Rmd extension
# on this case we use both
ext <- c(grep("^prod_.*\\.rmd$",x = dir(path = "docs"),value = T), # for .rmd
grep("^prod_.*\\.Rmd$",x = dir(path = "docs"),value = T), # for .Rmd
".tex",".log")                                            # for .tex and .log
for (i in 1:length(ext)) {
file.remove(paste0("docs/",dir(path="docs", pattern=ext[i]))) # delete files
}
browseURL(url = "docs/index.html")
